import telebot
from telebot import types
import json 
import subprocess
import os
import time


TOKEN = "7050930461:AAEyhz6SLz5mX2NShlLmaX071eO8mOUQmV8"
bot = telebot.TeleBot(TOKEN)
###–°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –æ—Ç—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–∏—Å–∫–∞ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É. –û–Ω –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –Ω–µ –±–æ–ª–µ–µ 10 —Ñ–∞–π–ª–æ–≤ .txt
if not os.path.exists('Search_history'):
    os.mkdir('Search_history')
###–°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è badwords
filename = "badwords.txt"
if not os.path.exists(filename):
    with open(filename, 'w'):
        pass    
###–°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
filename = "admins.txt"
if not os.path.exists(filename):
    with open(filename, 'w'):
        pass
###–°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
filename = "search_scripts.txt"
if not os.path.exists(filename):
    with open(filename, 'w'):
        pass
###–°–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ['COMMENT_CHANNEL'] = '@channel'


###–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=["start"])
def start(message):
    if if_admin(message):
        bot.send_message(message.chat.id, f"–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø–µ–ø–µ—Ä–æ–Ω—è –∏ —è –ø–æ–º–æ–≥–∞—é —Å —Ä–∞–±–æ—Ç–æ–π –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º ‚ò∫Ô∏è\n–í—ã–±–µ—Ä–∏—Ç–µ –≤ –º–µ–Ω—é —á—Ç–æ –∏–º–µ–Ω–Ω–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å)")


###–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –±–æ—Ç–∞
def if_admin(message):
    with open('admins.txt', 'r', encoding='utf-8') as file:
        data = file.read()
    values = data.split('\n')
    username = message.from_user.username
    if username in values:
        return True
    else:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –±–æ—Ç–∞. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –º–æ–≥—É —Å –í–∞–º–∏ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å üòî')
        return False


###–î–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
@bot.message_handler(commands=["admin"])
def admin_main(message):
    if if_admin(message):
        bot.send_message(message.chat.id, 'üçï –í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é:\n\n/new_admin - –¥–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n/delete_admin - —É–±—Ä–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n/show_admins - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤')


###–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
@bot.message_handler(commands=["new_admin"])
def new_admin(message):
    if if_admin(message):
        bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –µ–≥–æ –Ω–∏–∫–Ω–µ–π–º –±–µ–∑ "@".\n‚óΩÔ∏è –ü—Ä–∏–º–µ—Ä:\n\nvova_vova123.')
        bot.register_next_step_handler(message, new_admin2)
def new_admin2(message):
    word = message.text.lower()
    with open('admins.txt', 'r', encoding='utf-8') as file:
        data = file.read()
    values = data.split('\n')
    if word not in values:    
        with open('admins.txt', 'a', encoding='utf-8') as file:
            file.write(f"{word}\n")
        bot.send_message(message.chat.id, f"‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä \"{word}\" –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤\n\n/new_admin - –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –æ–¥–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n/admin - –Ω–∞–∑–∞–¥")
    else:
        bot.send_message(message.chat.id, f"‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä \"{word}\" —É–∂–µ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤\n\n/new_admin - –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –æ–¥–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n/admin - –Ω–∞–∑–∞–¥")


###–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞
@bot.message_handler(commands=["delete_admin"])
def delete_admin(message):
    if if_admin(message):
        bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –µ–≥–æ –Ω–∏–∫–Ω–µ–π–º –±–µ–∑ "@".\n‚óΩÔ∏è –ü—Ä–∏–º–µ—Ä:\n\nvova_vova123')
        bot.register_next_step_handler(message, delete_admin2)
def delete_admin2(message):
    del_admin = message.text
    with open('admins.txt', 'r', encoding='utf-8') as file:
        lines = file.readlines()
    
    with open('admins.txt', 'w', encoding='utf-8') as file:
        for line in lines:
            if line.strip() != del_admin:
                file.write(line)
    bot.send_message(message.chat.id, f"‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä \"{del_admin}\" —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤\n\n/delete_admin - —É–¥–∞–ª–∏—Ç—å –µ—â—ë –æ–¥–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n/admin - –Ω–∞–∑–∞–¥")


###–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
@bot.message_handler(commands=["show_admins"])
def show_admins(message):
    if if_admin(message):
        with open('admins.txt', 'r', encoding='utf-8') as file:
            bot.send_message(message.chat.id, f"üçï –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:\n\n{', '.join([line.strip() for line in file])}\n\n/admin - –Ω–∞–∑–∞–¥")
        admin_main(message)


###–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
@bot.message_handler(commands=["moderator"])
def moderation(message):
    if if_admin(message):
        bot.send_message(message.chat.id, 'üçï –í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞:\n\n/change_forward_channel - —Å–º–µ–Ω–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤\n/add_word - –¥–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ –≤ —Å–ª–æ–≤–∞—Ä—å\n/remove_word - —É–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ –∏–∑ —Å–ª–æ–≤–∞—Ä—è\n/show_bad_words - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å–ª–æ–≤–∞ –∏–∑ —Å–ª–æ–≤–∞—Ä—è\n/clear_badwords - –æ—á–∏—Å—Ç–∏—Ç—å —Å–ª–æ–≤–∞—Ä—å')


###–°–º–µ–Ω–∞ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ø—Ä–∏–µ–º–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
@bot.message_handler(commands=["change_forward_channel"])
def com_dump(message):
    if if_admin(message):
        frwrd_chnnl = os.environ.get('COMMENT_CHANNEL')
        bot.send_message(message.chat.id, f'–ö–∞–Ω–∞–ª –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤: {frwrd_chnnl}\n–ß—Ç–æ–±—ã —Å–º–µ–Ω–∏—Ç—å –∫–∞–Ω–∞–ª, –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥—É—Ç –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å—Å—è –≤—Å–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –µ–≥–æ —é–∑–µ—Ä–Ω–µ–π–º.\n‚óΩÔ∏è –ü—Ä–∏–º–µ—Ä:\n\n@channel')
        bot.register_next_step_handler(message, Save_channels_with_comments)
def Save_channels_with_comments(message):    
    if '@' in message.text:
        try:
            channel = message.text  
            bot.send_message(channel, '–ü—Ä–æ–≤–µ—Ä–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!')
            os.environ['COMMENT_CHANNEL'] = message.text
            bot.send_message(message.chat.id, '‚úÖ –ö–∞–Ω–∞–ª –¥–ª—è –ø—Ä–∏–µ–º–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\n\n/moderator - –Ω–∞–∑–∞–¥')
            moderation(message)
        except Exception: 
            bot.send_message(message.chat.id, '‚ùóÔ∏è –ë–æ—Ç—É –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∫–∞–Ω–∞–ª!\n\n–ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –≤—ã —É–±–µ–¥–∏–ª–∏—Å—å —á—Ç–æ –∫–∞–Ω–∞–ª –æ—Ç–∫—Ä—ã—Ç –¥–ª—è –±–æ—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –Ω–∏–∫–Ω–µ–π–º —Å–Ω–æ–≤–∞. –ü—Ä–∏–º–µ—Ä:\n@channel')     
            bot.register_next_step_handler(message, Save_channels_with_comments)
    else:
        bot.send_message(message.chat.id, '‚ùóÔ∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç! –û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—â—ë —Ä–∞–∑ –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ. –ü—Ä–∏–º–µ—Ä:\n\n@channel')
        bot.register_next_step_handler(message, Save_channels_with_comments)


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–ª–æ–≤–∞ –≤ —Ñ–∞–π–ª badwords.txt
@bot.message_handler(commands=['add_word'])
def add_word_to_badwords(message):
    if if_admin(message):
        bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ –≤ —Å–ª–æ–≤–∞—Ä—å –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –µ–≥–æ.\n\nP.S. –†–µ–≥–∏—Å—Ç—Ä –±—É–∫–≤ –Ω–µ –≤–∞–∂–µ–Ω, –±–æ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç –ª—é–±—É—é –≤–∞—Ä–∏–∞—Ü–∏—é —ç—Ç–æ–≥–æ —Å–ª–æ–≤–∞ –∏–∑ –±–æ–ª—å—à–∏—Ö –∏ –º–∞–ª–µ–Ω—å–∫–∏—Ö –±—É–∫–≤.')
        bot.register_next_step_handler(message, add_word_to_badwords2)
def add_word_to_badwords2(message):    
    word = message.text.lower()
    with open('badwords.txt', 'r', encoding='utf-8') as file:
        data = file.read()
    values = data.split('\n')
    if word not in values:    
        with open('badwords.txt', 'a', encoding='utf-8') as file:
            file.write(f"{word}\n")
        bot.send_message(message.chat.id, f"‚úÖ –°–ª–æ–≤–æ \"{word}\" –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ —Å–ª–æ–≤–∞—Ä—å –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤\n\n/add_word - –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –æ–¥–Ω–æ —Å–ª–æ–≤–æ\n/moderator - –Ω–∞–∑–∞–¥")
    else:
        bot.send_message(message.chat.id, f"‚úÖ –°–ª–æ–≤–æ \"{word}\" —É–∂–µ –µ—Å—Ç—å –≤ —Å–ª–æ–≤–∞—Ä–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤\n\n/add_word - –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –æ–¥–Ω–æ —Å–ª–æ–≤–æ\n/moderator - –Ω–∞–∑–∞–¥")


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤
@bot.message_handler(commands=['show_bad_words'])
def show_bad_words(message):
    if if_admin(message):
        with open('badwords.txt', 'r', encoding='utf-8') as file:
            bot.send_message(message.chat.id, f"–°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤:\n\n{', '.join([line.strip() for line in file])}\n\n/moderator - –Ω–∞–∑–∞–¥")


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–ª–æ–≤–∞ –∏–∑ —Ñ–∞–π–ª–∞ badwords.txt
@bot.message_handler(commands=['remove_word'])
def remove_word_from_badwords(message):
    if if_admin(message):
        bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã —É–±—Ä–∞—Ç—å —Å–ª–æ–≤–æ –∏–∑ —Å–ª–æ–≤–∞—Ä—è –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –µ–≥–æ.\n\nP.S. –†–µ–≥–∏—Å—Ç—Ä –±—É–∫–≤ –Ω–µ –≤–∞–∂–µ–Ω, –±–æ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç –ª—é–±—É—é –≤–∞—Ä–∏–∞—Ü–∏—é —ç—Ç–æ–≥–æ —Å–ª–æ–≤–∞ –∏–∑ –±–æ–ª—å—à–∏—Ö –∏ –º–∞–ª–µ–Ω—å–∫–∏—Ö –±—É–∫–≤.')
        bot.register_next_step_handler(message, remove_word_from_badwords2)
def remove_word_from_badwords2(message):
    word_to_remove = message.text.lower()
    with open('badwords.txt', 'r', encoding='utf-8') as file:
        lines = file.readlines()
    
    with open('badwords.txt', 'w', encoding='utf-8') as file:
        for line in lines:
            if line.strip() != word_to_remove:
                file.write(line)
    bot.send_message(message.chat.id, f"‚úÖ –°–ª–æ–≤–æ \"{word_to_remove}\" —É–¥–∞–ª–µ–Ω–æ –∏–∑ —Å–ø–∏—Å–∫–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤\n\n/remove_word - –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –æ–¥–Ω–æ —Å–ª–æ–≤–æ\n/moderator - –Ω–∞–∑–∞–¥")


### –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ñ–∞–π–ª–∞ badwords.txt
@bot.message_handler(commands=['clear_badwords'])
def clear_bad_words(message):
    if if_admin(message):
        open('badwords.txt', 'w').close()
        bot.reply_to(message, "‚úÖ –°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤ –æ—á–∏—â–µ–Ω\n\n/moderator - –Ω–∞–∑–∞–¥")
        

###–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞
@bot.message_handler(commands=["keyword_find"])
def keyword_find(message):
    bot.send_message(message.chat.id, 'üçï –í—ã–±–µ—Ä–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é:\n\n/new_scripts - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –≤ –ø–∞–Ω–µ–ª—å\n/delete_scripts - —É–¥–∞–ª–∏—Ç—å —Å–∫—Ä–∏–ø—Ç –∏–∑ –ø–∞–Ω–µ–ª–∏\n/keyword_search - –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å –ø–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É')


###–î–æ–±–∞–≤–∏—Ç—å —Å–∫—Ä–∏–ø—Ç –≤ –ø–∞–Ω–µ–ª—å
@bot.message_handler(commands=["new_scripts"])
def new_scripts(message):
    if if_admin(message):
        bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –µ–≥–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ.')
        bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ: \n1. –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞, –≤ –∫–æ—Ç–æ—Ä–º –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å\n2. –°–∫–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ—Å—Ç–æ–≤ –±—É–¥–µ–º –ø—Ä–æ–≤–µ—Ä—è—Ç—å\n3. –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ (–†–µ–≥–∏—Å—Ç—Ä –≤–∞–∂–µ–Ω!)\n4. –í –∫–∞–∫–æ–π –∫–∞–Ω–∞–ª —Å–æ—Ö—Ä–∞–Ω—è–µ–º\n\n‚óΩÔ∏è –ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞:\nSearch_channel 10 keyword my_channel')
        bot.register_next_step_handler(message, new_scripts2)
def new_scripts2(message):
    word = message.text.lower()
    with open('search_scripts.txt', 'r', encoding='utf-8') as file:
        data = file.read()
    values = data.split('\n')
    if word not in values:    
        with open('search_scripts.txt', 'a', encoding='utf-8') as file:
            file.write(f"{word}\n")
        bot.send_message(message.chat.id, f"–°–∫—Ä–∏–ø—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ø–∞–Ω–µ–ª—å\n\n/new_scripts - –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë —Å–∫—Ä–∏–ø—Ç\n/keyword_search - –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å –ø–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É")


###–£–±—Ä–∞—Ç—å —Å–∫—Ä–∏–ø—Ç –∏–∑ –ø–∞–Ω–µ–ª–∏
@bot.message_handler(commands=["delete_scripts"])
def delete_scripts(message):
    if if_admin(message):
        bot.send_message(message.chat.id, '–ß—Ç–æ–±—ã —É–±—Ä–∞—Ç—å —Å–∫—Ä–∏–ø—Ç –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –µ–≥–æ –≤ —Ç–∞–∫–æ–º –∂–µ —Ñ–æ—Ä–º–∞—Ç–µ, –∫–∞–∫ –æ–Ω –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –Ω–∏–∂–µ (–º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è).')
        with open('search_scripts.txt', 'r', encoding='utf-8') as file:
            data = file.read()
        values = data.split('\n')
        text = ""
        for value in values:
            text += value + "\n\n"
        bot.send_message(message.chat.id, f'‚óΩÔ∏è –°–ø–∏—Å–æ–∫ –∏–º–µ—é—â–∏—Ö—Å—è —Å–∫—Ä–∏–ø—Ç–æ–≤:\n\n{text}')    
        bot.register_next_step_handler(message, delete_scripts2)
def delete_scripts2(message):
    script_to_remove = message.text
    with open('search_scripts.txt', 'r', encoding='utf-8') as file:
        lines = file.readlines()
    with open('search_scripts.txt', 'w', encoding='utf-8') as file:
        for line in lines:
            if line.strip() != script_to_remove:
                file.write(line)
    bot.send_message(message.chat.id, f"‚úÖ –°–∫—Ä–∏–ø—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞.\n\n/delete_scripts - —É–¥–∞–ª–∏—Ç—å –µ—â—ë —Å–∫—Ä–∏–ø—Ç\n/keyword_search - –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å –ø–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É")


###–ü–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –≥—Ä—É–ø–ø–µ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤
@bot.message_handler(commands=["keyword_search"])
def keyword_search(message):
    if not os.path.exists('./Search_history'):
        os.makedirs('./Search_history')
    with open('search_scripts.txt', 'r', encoding='utf-8') as file:
        data = file.read()
    values = data.split('\n')
    keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    keyboard.add(*[types.KeyboardButton(value) for value in values])      
    bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ: \n1. –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞, –≤ –∫–æ—Ç–æ—Ä–º –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å\n2. –°–∫–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ—Å—Ç–æ–≤ –±—É–¥–µ–º –ø—Ä–æ–≤–µ—Ä—è—Ç—å\n3. –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ (–†–µ–≥–∏—Å—Ç—Ä –≤–∞–∂–µ–Ω!)\n4. –í –∫–∞–∫–æ–π –∫–∞–Ω–∞–ª —Å–æ—Ö—Ä–∞–Ω—è–µ–º\n\n‚óΩÔ∏è –ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞:\nSearch_channel 10 keyword my_channel ', reply_markup=keyboard)
    bot.register_next_step_handler(message, send_posts)
def collect_posts(channel, keyword):
    with open(f"./Search_history/{channel}.txt") as file:
        file = file.readlines()
    posts = []
    for n, line in enumerate(file):
        file[n] = json.loads(file[n])
        links = [link for link in file[n]['outlinks'] if channel not in link]
        p = str(file[n]['content']) + "\n" + str("\n".join(links) + "\n\n\n" + str(file[n]['url']) + "\n" + str(file[n]['date'].split("T")))
        if keyword in p:
            posts.append(p)
    return posts 
def upload_posts(num_posts, channel):
    command = f'snscrape --max-result {num_posts} --jsonl telegram-channel {channel} > ./Search_history/{channel}.txt'
    subprocess.run(command, shell=True)
def send_posts(message):
    try:
        channel, num_posts, keyword, target_channel = str(message.text).split()
        target_channel = "@"+target_channel

        upload_posts(num_posts, channel)
        posts = collect_posts(channel, keyword)
        while posts:
            bot.send_message(target_channel, posts.pop())
            time.sleep(1)
        
        bot.reply_to(message, "‚úÖ –ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω, –≤—Å–µ –ø–æ—Å—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É ü•≥\n\nP.S. –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ - –ø–æ—Å—Ç–æ–≤, —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö –¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ —Å—Ä–µ–¥–∏ –∏–∑—É—á–µ–Ω—ã—Ö –Ω–µ—Ç.\nP.S.S. –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –º–æ–∂–µ—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –∑–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã –∏–ª–∏ —Å–∫–ª–æ–Ω–µ–Ω–∏—è. –ü–æ–∏—Å–∫ —Å—Ç—Ä–æ–≥–∏–π, –ø–æ—ç—Ç–æ–º—É –º–æ–∂–µ—Ç –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –ø–æ—Å—Ç —Å –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–º —Å–ª–æ–≤–æ–º —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä.", reply_markup=None)
        clear_search_history()
    except:
        bot.reply_to(message, "‚ùóÔ∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ü•≤\n–ù–∞–∂–º–∏ /keyword_find, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞", reply_markup=None)


###–û—á–∏—â–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é (—É–¥–∞–ª—è–µ–º 2 —Å–∞–º—ã—Ö —Å—Ç–∞—Ä—ã—Ö, –µ—Å–ª–∏ —Ñ–∞–π–ª–æ–≤ –±–æ–ª—å—à–µ 10)
def clear_search_history():
    directory = './Search_history'
    files = os.listdir(directory)
    if len(files) > 10:
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞ (—Å–∞–º—ã–µ —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –±—É–¥—É—Ç –≤ –Ω–∞—á–∞–ª–µ —Å–ø–∏—Å–∫–∞)
        files.sort(key=lambda x: os.path.getmtime(os.path.join(directory, x)))
        # –£–¥–∞–ª—è–µ–º –¥–≤–∞ —Å–∞–º—ã—Ö —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–∞
        for i in range(len(files) - 10):
            os.remove(os.path.join(directory, files[i]))


###–ú–æ–¥–µ—Ä–∞—Ü–∏—è –∏ –ø–µ—Ä–µ—Å—ã–ª–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
@bot.message_handler(func=lambda message: True)
def check_bad_words_and_forward(message):
    if check_bad_words(message):
        bot.delete_message(message.chat.id, message.message_id)
    else:
        frwrd_chnnl = os.environ.get('COMMENT_CHANNEL')
        if message.reply_to_message:
            if message.chat.id != message.from_user.id:
                bot.send_message(frwrd_chnnl, f"{'@' + message.from_user.username}\n\n{message.text}")
def check_bad_words(message):
    bad_word_found = False
    chat_id = message.chat.id
    user_id = message.from_user.id
    user_username = message.from_user.username
    text = message.text.lower()
    with open('badwords.txt', 'r', encoding='utf-8') as file:
        bad_words = [line.strip() for line in file]
    try:
        with open('warnings.txt', 'r') as file:
            warnings = json.load(file)
    except (json.decoder.JSONDecodeError, FileNotFoundError):
        warnings = {}
    for word in bad_words:
        if word.lower() in text:            
            if user_username not in warnings:
                warnings[user_username] = 1
                bot.reply_to(message, f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ 1: @{user_username}, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–ª–æ—Ö–∏–µ —Å–ª–æ–≤–∞.")
                bad_word_found = True
                break
            elif warnings[user_username] == 1:
                warnings[user_username] = 2
                bot.reply_to(message, f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ 2: @{user_username}, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–ª–æ—Ö–∏–µ —Å–ª–æ–≤–∞. –ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.")
                bad_word_found = True
                break
            else:
                bot.restrict_chat_member(chat_id, user_id, can_send_messages=False)
                bot.reply_to(message, f"@{user_username}, –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–ª–æ—Ö–∏—Ö —Å–ª–æ–≤.")                
                bad_word_found = True
                break
    with open('warnings.txt', 'w') as file:
        json.dump(warnings, file)
    return bad_word_found


bot.polling(non_stop=True)    
